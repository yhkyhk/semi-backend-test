플러터와 장고를 이용한 퀴즈앱 개발

장고 개발
cd D:\test\flutter_test\quiz_backend_test

quiz_backend_test 폴더 생성
mkdir quiz_backend_test 

python으로 가상환경 venv 생성
python -m venv venv

venv 가상환경 실행
.\venv\Scripts\activate.bat

django djangorestframefowk 설치
pip install django django djangorestframefowk

django 프로젝트 생성
django-admin startproject myapi .

앱생성
python manage.py startapp quiz

vscode 실행
code .

myapi/settings.py 를 수정 후 또는 django 코드 수정 후
python manage.py makemigrations
python manage.py migrate

django web server 실행
python manage.py runserver

127.0.0.1:8000/helloAPI
127.0.0.1:8000/quiz/1
127.0.0.1:8000/quiz/2
127.0.0.1:8000/quiz/3
127.0.0.1:8000/quiz/4


수퍼유저 생성
python manage.py createsuperuser
Username :
Password :
Password (again) :

배포
상용은 aws를 통해 배포
간단한 프로그램은 pythonanywhere, heroku 무료 호스팅 서비스를 통해 배포 가능
heroku로 배포

pip install django-cors-headers gunicorn psycopg2-binary whitenoise dj-database-url

django-cors-headers : cors 에러 방지
gunicorn : 배포를 위한 도구
psycopg2-binary whitenoise dj-database-url : Heroku에서 사용하는 DB인 postgresql을 위한 것
whitenoise : 정적 파일 사용을 돕는 미들웨어

패키지 설치 후 패키지 의존성에 대한 requirement.txt파일 생성
pip freeze > requirement.txt

myapi폴더내의 settings.py를 수정
루트디렉토리에 Procfile 생성
루트디렉토리에 runtime.txt 생성
루트디렉토리에 .gitignore 생성

heroku 서비스 가입
semigifn@gmail.com
her76@@97cd

heroku cli 버젼 설치

개발폴더 git 폴더로 설정
git init
git add --all
git commit -m "Ready for deploy"
git remote add origin https://github.com/yhkyhk/drf_quiz_test.git
git push origin master

터미널에서 
heroku login
웹브라우저에서 로그인

heroku create drf-quiz-test
drf-quiz-test이 앞으로 url로 사용한 주소

git push heroku master

heroku run python manage.py migrate









